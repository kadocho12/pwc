// ==========================================================================
// font-size
// ==========================================================================
@mixin fontSize($size) {
  font-size: $size + px;
  font-size: ($size / 16) + rem;
}

// ==========================================================================
// heading font
// ==========================================================================
@mixin headFont {
  font-feature-settings: 'palt' 1;

  @media #{$screenSize_XS} {
    font-family: $headSpFont;
  }
  @media #{$screenSize_S} {
    font-family: $headFont;
  }
}

@mixin engFont {
  font-family: $engFont;
  font-feature-settings: 'palt' 1;
}

// ==========================================================================
// ベースフォントで文字詰めを行わない標準フォントを表示する
// ==========================================================================
@mixin baseSentence {
  text-justify: inter-ideograph; // IE
  font-feature-settings: normal;
  @media #{$screenSize_XS} {
    font-family: $baseOriginSpFont; // Yakuhanを読み込まない
  }
  @media #{$screenSize_S} {
    font-family: $baseOriginFont; // Yakuhanを読み込まない
  }
}

// ==========================================================================
// animation
// ==========================================================================
// スクロールでテキストアニメーション
@mixin animation(
  $name,
  $duration: 1s,
  $timing-function: ease,
  $delay: 0s,
  $iteration-count: 1,
  $direction: normal,
  $fill-mode: forwards
) {
  animation: {
    name: $name;
    duration: $duration;
    timing-function: $timing-function;
    delay: $delay;
    iteration-count: $iteration-count;
    direction: $direction;
    fill-mode: $fill-mode;
  }
}

// ==========================================================================
// setNextSpace
// ==========================================================================
//上のコンテンツとの余白を設定する。
@mixin setNextSpace {
  .c-heading.-lv_1 + & {
    @media #{$screenSize_XS} {
      margin-top: 56px;
    }
    @media #{$screenSize_S} {
      margin-top: 64px;
    }
  }

  .c-heading.-lv_2 + & {
    @media #{$screenSize_XS} {
      margin-top: 40px;
    }
    @media #{$screenSize_S} {
      margin-top: 48px;
    }
  }

  .c-heading.-lv_3 + & {
    @media #{$screenSize_XS} {
      margin-top: 32px;
    }
    @media #{$screenSize_S} {
      margin-top: 40px;
    }
  }
  
  .c-paragraph + &,
  .c-list + &,
  .c-table + &,
  .c-image + & {
    @media #{$screenSize_XS} {
      margin-top: 21px;
    }
    @media #{$screenSize_S} {
      margin-top: 24px;
    }
  }
}

// ==========================================================================
// lineHeightCrop
// ==========================================================================
// 行高を削る。
@mixin lineHeightCrop($line-height) {
  &::before {
    display: block;
    width: 0;
    height: 0;
    margin-top: calc((1 - #{$line-height}) * .5em);
    content: "";
  }
  &::after {
    display: block;
    width: 0;
    height: 0;
    margin-bottom: calc((1 - #{$line-height}) * .5em);
    content: "";
  }
}
// .p-edit-areaのimg要素に対して指定する。
// 画像に対しては、行高削除が不要なため、行高を復活させる。
@mixin lineHeightFixTop($line-height) {
  padding-top: calc((-1 + #{$line-height}) * .5em);
}
@mixin lineHeightFixBottom($line-height) {
  padding-bottom: calc((-1 + #{$line-height}) * .5em);
}

// ==========================================================================
// icon
// ==========================================================================

//矢印（>）
@mixin arrow($size, $width, $pos, $baseColor) {
  box-sizing: border-box;
  display: block;
  position: absolute;
  top: 50%;
  width: #{$size}px;
  height: #{$size}px;
  border-style: solid;

  @if $pos== 'left' {
    border-width: 0 0 $width + px $width + px;
    transform: translate(0, -50%) rotate(45deg);
  } @else if $pos== 'top' {
    border-width: $width + px 0 0 $width + px;
    transform: translate(0, -50%) rotate(45deg);
  } @else if $pos== 'bottom' {
    border-width: 0 $width + px $width + px 0;
    transform: translate(0, -50%) rotate(45deg);
  } @else {
    border-width: $width + px $width + px 0 0;
    transform: translate(0, -50%) rotate(45deg);
  }

  border-color: $baseColor;
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s,
    border-color cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  content: '';
}

//矢印（>　／　インライン）
@mixin inlineArrow($size, $width, $pos, $baseColor) {
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  top: -0.2em;
  width: #{$size}px;
  height: #{$size}px;
  border-style: solid;

  @if $pos== 'left' {
    border-width: 0 0 $width + px $width + px;
    margin-right: 4px;
  } @else if $pos== 'top' {
    border-width: $width + px 0 0 $width + px;
    margin-left: 4px;
  } @else if $pos== 'bottom' {
    border-width: 0 $width + px $width + px 0;
    margin-left: 4px;
  } @else {
    border-width: $width + px $width + px 0 0;
    margin-left: 4px;
  }

  border-color: $baseColor;
  transform: translate(0, 0) rotate(45deg);
  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s,
    border-color cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  content: '';
}

//矢印（→）
@mixin arrow2($direction, $color: $triangleColor, $color2: $hoverColor) {
  span {
    position: absolute;
    transition: all 0.2s ease;

    &:before {
      content: '';
      position: absolute;
      border-style: solid;
      transition: all 0.2s ease;
    }

    &:after {
      content: '';
      position: absolute;
      transition: all 0.2s ease;
      background-color: $color;
    }
  }

  &:hover,
  a:hover & {
    @media #{$screenSize_M} {
      color: $color2;
    }
  }

  @if $direction== 'right' or $direction== 'left' {
    span {
      top: calc(50% - 2px);
      height: 4px;

      @media #{$screenSize_XS} {
        width: 14px;
      }

      @media #{$screenSize_S} {
        width: 20px;
      }

      .browser-is-ie & {
        @media #{$screenSize_S} {
          top: calc(36% - 2px);
        }
      }

      &:after {
        height: 1px;
        bottom: 0;
        left: 0;

        @media #{$screenSize_XS} {
          width: 10px;
        }

        @media #{$screenSize_S} {
          width: 16px;
        }
      }
    }
  }

  @if $direction== 'top' or $direction== 'bottom' {
    span {
      right: 0;
      width: 4px;

      @media #{$screenSize_XS} {
        top: calc(50% - 6px);
        height: 14px;
      }

      @media #{$screenSize_S} {
        top: calc(50% - 7px);
        height: 15px;
      }

      &:after {
        width: 1px;
        height: 10px;
      }
    }
  }

  @if $direction== 'right' {
    span {
      &:before {
        bottom: 0;
        right: 0;
        border-width: 4px 0 0 4px;
        border-color: transparent transparent transparent $color;
      }
    }

    &:hover,
    a:hover & {
      span {
        &:before {
          @media #{$screenSize_M} {
            border-color: transparent transparent transparent $color2;
          }
        }
        &:after {
          @media #{$screenSize_M} {
            background-color: $color2;
          }
        }

        &:nth-of-type(1) {
          @media #{$screenSize_M} {
            transform: translateX(8px);
          }
        }
      }
    }
  }

  @if $direction== 'left' {
    span {
      &:before {
        bottom: 0;
        left: 0;
        border-width: 4px 4px 0 0;
        border-color: transparent $color transparent transparent;
      }
      &:after {
        left: auto;
        right: 0;
      }
    }

    &:hover,
    a:hover & {
      span {
        &:before {
          @media #{$screenSize_M} {
            border-color: transparent $color2 transparent transparent;
          }
        }
        &:after {
          @media #{$screenSize_M} {
            background-color: $color2;
          }
        }

        &:nth-of-type(1) {
          @media #{$screenSize_M} {
            transform: translateX(-8px);
          }
        }
      }
    }
  }

  @if $direction== 'bottom' {
    span {
      &:before {
        bottom: 0;
        right: 0;
        border-width: 5px 3.5px 0 3.5px;
        border-color: $color transparent transparent transparent;
      }

      &:nth-of-type(2) {
        transform: translateY(-15px);
      }
    }

    &:hover,
    a:hover & {
      span {
        &:before {
          @media #{$screenSize_M} {
            border-color: $color2 transparent transparent transparent;
          }
        }
        &:after {
          @media #{$screenSize_M} {
            background-color: $color2;
          }
        }

        &:nth-of-type(1) {
          @media #{$screenSize_M} {
            transform: translateY(8px);
          }
        }
      }
    }
  }

  @if $direction== 'top' {
    span {
      &:before {
        top: 0;
        right: 0;
        border-width: 0 3.5px 5px 3.5px;
        border-color: transparent transparent $color2 transparent;
      }

      &:after {
        bottom: 0;
        left: 0;
      }

      &:nth-of-type(2) {
        transform: translateY(15px);
      }
    }

    &:hover,
    a:hover & {
      span {
        &:before {
          @media #{$screenSize_M} {
            border-color: transparent transparent $color2 transparent;
          }
        }
        &:after {
          @media #{$screenSize_M} {
            background-color: $color2;
          }
        }

        &:nth-of-type(1) {
          @media #{$screenSize_M} {
            transform: translateY(-8px);
          }
        }
      }
    }
  }
}

//三角形
@mixin triangle($width, $height, $pos, $color) {
  display: block;
  width: 0;
  height: 0;
  border-style: solid;

  @if $pos== 'bottom' {
    border-bottom: 0 + px transparent solid;
    border-right: $width/2 + px transparent solid;
    border-left: $width/2 + px transparent solid;
    border-top: $height + px $color solid;
  }

  @if $pos== 'top' {
    border-top: 0 + px transparent solid;
    border-right: $width/2 + px transparent solid;
    border-left: $width/2 + px transparent solid;
    border-bottom: $height + px $color solid;
  }

  @if $pos== 'left' {
    border-left: 0 + px transparent solid;
    border-top: $height/2 + px transparent solid;
    border-bottom: $height/2 + px transparent solid;
    border-right: $width + px $color solid;
  }

  @if $pos== 'right' {
    border-right: 0 + px transparent solid;
    border-top: $height/2 + px transparent solid;
    border-bottom: $height/2 + px transparent solid;
    border-left: $width + px $color solid;
  }

  transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s,
    border-color cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s;
  content: '';
}

//別窓
@mixin blank($width, $height, $pos, $color, $top) {
  &:after {
    position: absolute;
    display: inline-block;
    content: '';
    #{$pos}: 0;
    top: calc(#{$top} + 2px);
    width: $width - 2 + 0px;
    height: $height - 2 + 0px;
    // background-color: $color;
    box-sizing: border-box;
    border: {
      style: solid;
      width: 1px;
      color: $color;
    }
    transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s,
      border-color cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s;

    @if $pos== 'right' {
      margin-right: 2px;
    }
  }

  &:before {
    position: absolute;
    display: inline-block;
    top: $top;
    content: '';
    #{$pos}: 0;
    width: $width - 2 + 0px;
    height: $height - 2 + 0px;
    border: {
      style: solid;
      width: 1px 1px 0 0;
      color: $color;
    }

    box-sizing: border-box;
    transition: transform cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s,
      border-color cubic-bezier(0.215, 0.61, 0.355, 1) 0.15s;

    @if $pos== 'left' {
      margin-left: 2px;
    }
  }
}

//「＋」
@mixin plus($size, $width, $baseColor) {
  position: absolute;
  top: calc(50% - #{$size}px / 2);
  width: #{$size}px;
  height: #{$size}px;

  &:before {
    content: '';
    display: inline-block;
    width: #{$width}px;
    height: #{$size}px;
    position: absolute;
    top: 0;
    left: calc(50% - #{$width}px/2);
    background-color: $baseColor;
  }

  &:after {
    content: '';
    display: inline-block;
    width: #{$size}px;
    height: #{$width}px;
    position: absolute;
    top: calc(50% - #{$width}px/2);
    left: 0;
    background-color: $baseColor;
  }
}
